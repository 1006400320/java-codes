//定义扩展属性(给脚本用的脚本)
buildscript {

    //定义扩展属性(可选)
    ext {
        springBootVersion = '2.1.1.RELEASE'
        ext['springCloudVersion'] = 'Greenwich.M3'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
    }
    dependencies {
        // todo [gradle ssh 插件](https://www.cnblogs.com/woms/p/7040777.html)
        classpath 'org.hidetake:gradle-ssh-plugin:1.1.3'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

group 'com.linhuanjie'
version '1.0'

apply plugin: 'java'

// JVM 版本号要求
sourceCompatibility = 1.8
targetCompatibility = 1.8

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
repositories {
    mavenCentral()
    maven { url "https://repo.spring.io/milestone" }
}

allprojects {
    //应用插件
    apply plugin: 'java'
    apply plugin: 'war'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // JVM 版本号要求
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.compilerArgs += "-parameters"
    }

    ext {
        springBootVersion = '2.1.1.RELEASE'
        ext['springCloudVersion'] = 'Greenwich.M3'
        projectBase = project(':base')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/milestone" }
        maven { url "http://mvn.gt.igexin.com/nexus/content/repositories/releases/" }
        maven { url "http://repo.maven.apache.org/maven2" }
    }

    dependencies {
        compile 'com.squareup.okhttp3:okhttp:3.14.1'
        implementation('org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.2')
        compile('org.springframework.boot:spring-boot-starter-web')
        implementation('org.springframework.boot:spring-boot-starter-actuator')
        implementation('org.springframework.cloud:spring-cloud-starter-openfeign')
        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix')
        runtimeOnly('mysql:mysql-connector-java')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        compileOnly 'org.projectlombok:lombok:1.18.8'
        implementation('org.springframework.boot:spring-boot-starter-data-redis')
        compile 'org.apache.commons:commons-pool2:2.5.0'
        compile 'com.google.collections:google-collections:1.0'

    }

    sourceSets {
        main {
            java {
                srcDir 'src/main/java'   //设置 Java 源码所在目录
            }
            resources {
                srcDir 'src/main/resources/'
            }
        }

        test {
            java {
                srcDir 'src/test/java'
            }
            resources {
                srcDir 'src/test/resources'
            }
        }
    }


    jar {
        baseName = project.name
        version = '0.0.1'
        manifest {
            attributes "Manifest-Version": 2.0,
                    'Main-Class': 'com.xlchao.book.BookApplication'
        }
        from {
            configurations.compile.collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }

    }
}



