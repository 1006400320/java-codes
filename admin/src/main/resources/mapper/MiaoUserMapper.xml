<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.linhuanjie.admin.dao.MiaoUserMapper">
  <resultMap id="BaseResultMap" type="com.linhuanjie.admin.model.MiaoUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="nick_name" jdbcType="VARCHAR" property="nickName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    user_id, user_name, nick_name, `password`, email, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="com.linhuanjie.admin.model.MiaoUserKey" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from miao_user
    where user_id = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.linhuanjie.admin.model.MiaoUserKey">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from miao_user
    where user_id = #{userId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.linhuanjie.admin.model.MiaoUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into miao_user (user_id, user_name, nick_name, 
      `password`, email, create_time, 
      update_time)
    values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR}, #{nickName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.linhuanjie.admin.model.MiaoUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into miao_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_id')">
            user_id,
          </if>
          <if test="_parameter.hasSelective('user_name')">
            user_name,
          </if>
          <if test="_parameter.hasSelective('nick_name')">
            nick_name,
          </if>
          <if test="_parameter.hasSelective('password')">
            `password`,
          </if>
          <if test="_parameter.hasSelective('email')">
            email,
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time,
          </if>
          <if test="_parameter.hasSelective('update_time')">
            update_time,
          </if>
        </when>
        <otherwise>
          <if test="userId != null">
            user_id,
          </if>
          <if test="userName != null">
            user_name,
          </if>
          <if test="nickName != null">
            nick_name,
          </if>
          <if test="password != null">
            `password`,
          </if>
          <if test="email != null">
            email,
          </if>
          <if test="createTime != null">
            create_time,
          </if>
          <if test="updateTime != null">
            update_time,
          </if>
        </otherwise>
      </choose>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_id')">
            #{userId,jdbcType=INTEGER},
          </if>
          <if test="_parameter.hasSelective('user_name')">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('nick_name')">
            #{nickName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('password')">
            #{password,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('email')">
            #{email,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('update_time')">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="userId != null">
            #{userId,jdbcType=INTEGER},
          </if>
          <if test="userName != null">
            #{userName,jdbcType=VARCHAR},
          </if>
          <if test="nickName != null">
            #{nickName,jdbcType=VARCHAR},
          </if>
          <if test="password != null">
            #{password,jdbcType=VARCHAR},
          </if>
          <if test="email != null">
            #{email,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.linhuanjie.admin.model.MiaoUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update miao_user
    <set>
      <choose>
        <when test="_parameter.hasSelective()">
          <if test="_parameter.hasSelective('user_name')">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('nick_name')">
            nick_name = #{nickName,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('password')">
            `password` = #{password,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('email')">
            email = #{email,jdbcType=VARCHAR},
          </if>
          <if test="_parameter.hasSelective('create_time')">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="_parameter.hasSelective('update_time')">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </when>
        <otherwise>
          <if test="userName != null">
            user_name = #{userName,jdbcType=VARCHAR},
          </if>
          <if test="nickName != null">
            nick_name = #{nickName,jdbcType=VARCHAR},
          </if>
          <if test="password != null">
            `password` = #{password,jdbcType=VARCHAR},
          </if>
          <if test="email != null">
            email = #{email,jdbcType=VARCHAR},
          </if>
          <if test="createTime != null">
            create_time = #{createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="updateTime != null">
            update_time = #{updateTime,jdbcType=TIMESTAMP},
          </if>
        </otherwise>
      </choose>
    </set>
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.linhuanjie.admin.model.MiaoUser">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update miao_user
    set user_name = #{userName,jdbcType=VARCHAR},
      nick_name = #{nickName,jdbcType=VARCHAR},
      `password` = #{password,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_id = #{userId,jdbcType=INTEGER}
  </update>
</mapper>